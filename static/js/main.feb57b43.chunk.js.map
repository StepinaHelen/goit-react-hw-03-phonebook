{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/ListItem/ListItem.module.css","Components/Filter/Filter.module.css","Components/Container/Container.module.css","Components/ContactList/ContactList.module.css","Components/Button/Button.module.css","Components/Container/Container.jsx","Components/Button/Button.jsx","Components/ListItem/ListItem.jsx","Components/ContactList/ContactList.jsx","Components/ContactForm/ContactForm.jsx","Components/Filter/Filter.jsx","App.js","index.js"],"names":["module","exports","Container","children","className","styles","container","Button","onClick","text","type","button","defaultProps","ListItem","contacts","onDeleteContact","map","id","name","number","listItem","ContactList","list","ContactForm","state","handleInputChange","event","valueInput","currentTarget","setState","value","trimLeft","handleSubmit","preventDefault","props","addContact","find","findContact","alert","reset","this","onSubmit","form","label","input","onChange","React","Component","Filter","filter","onHandleInputSearch","findContactLabel","findContactInput","App","contact","uuidv4","prevState","deleteContact","contactId","handleInputSearch","e","getfilterContact","normalizedContact","toLowerCase","includes","prevProps","snapshot","localStorage","setItem","JSON","stringify","getItem","persedContacts","parse","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.feb57b43.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3cJaE\",\"input\":\"ContactForm_input__3DiId\",\"label\":\"ContactForm_label__YANpC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ListItem_listItem__2l25z\",\"name\":\"ListItem_name__T9OfB\",\"number\":\"ListItem_number__2rEfc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"findContact\":\"Filter_findContact__3gF7q\",\"findContactLabel\":\"Filter_findContactLabel__1Z2q8\",\"findContactInput\":\"Filter_findContactInput__2Ho1x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1du8O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__39_2M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__wFbB5\"};","import React from 'react';\r\nimport styles from './Container.module.css';\r\nimport PropTypes from 'prop-types';\r\nconst Container = ({ children }) => (\r\n  <div className={styles.container}>{children}</div>\r\n);\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Container;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Button.module.css';\r\n\r\nconst Button = ({ onClick, text, type = 'button' }) => (\r\n  <button type={type} className={styles.button} onClick={onClick}>\r\n    {text}\r\n  </button>\r\n);\r\n\r\nButton.defaultProps = {\r\n  onClick: () => null,\r\n};\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n  text: PropTypes.string.isRequired,\r\n  type: PropTypes.string,\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ListItem.module.css';\r\nimport Button from '../Button';\r\n\r\nconst ListItem = ({ contacts, onDeleteContact }) => {\r\n  return contacts.map(({ id, name, number }) => (\r\n    <li className={styles.listItem} key={id}>\r\n      <p className={styles.name}>{name} </p>\r\n      <p className={styles.number}>{number} </p>\r\n      {/* <button className={styles.delete} onClick={() => onDeleteContact(id)}>\r\n        Delete\r\n      </button> */}\r\n      <Button text=\"Delete\" onClick={() => onDeleteContact(id)} />\r\n    </li>\r\n  ));\r\n};\r\nListItem.propTypes = {\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\nexport default ListItem;\r\n","import React from 'react';\r\nimport styles from './ContactList.module.css';\r\nimport ListItem from '../ListItem';\r\n\r\n// cостояние хранится в ближайшем общем предке\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul className={styles.list}>\r\n      <ListItem contacts={contacts} onDeleteContact={onDeleteContact} />\r\n    </ul>\r\n  );\r\n};\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactForm.module.css';\r\nimport Button from '../Button';\r\n// import { v4 as uuidv4 } from 'uuid';\r\n\r\nclass ContactForm extends React.Component {\r\n  state = {\r\n    name: ' ',\r\n    number: '',\r\n  };\r\n  // inputId = uuidv4();\r\n  handleInputChange = event => {\r\n    const valueInput = event.currentTarget.name;\r\n    this.setState({ [valueInput]: event.currentTarget.value.trimLeft() });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const { contacts, addContact } = this.props;\r\n    const { name, number } = this.state;\r\n    const findName = contacts.find(findContact => {\r\n      return findContact.name === name;\r\n    });\r\n\r\n    if (findName) {\r\n      alert(`${name} is already in the contacts`);\r\n      this.reset();\r\n    } else {\r\n      addContact(name, number);\r\n      this.reset();\r\n    }\r\n  };\r\n  reset = () => {\r\n    this.setState({\r\n      name: ' ',\r\n      number: '',\r\n    });\r\n  };\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit} className={styles.form}>\r\n          <label className={styles.label}>\r\n            Name\r\n            <input\r\n              className={styles.input}\r\n              name=\"name\"\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </label>\r\n          <label className={styles.label}>\r\n            Number\r\n            <input\r\n              className={styles.input}\r\n              name=\"number\"\r\n              type=\"text\"\r\n              value={number}\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </label>\r\n\r\n          {/* <button type=\"submit\" className={styles.button}>\r\n            Add contact\r\n          </button> */}\r\n          <Button text=\"Add contact\" type=\"submit\" />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  addContact: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\nconst Filter = ({ filter, onHandleInputSearch }) => {\r\n  return (\r\n    <div className={styles.findContact}>\r\n      <h2>Contacts</h2>\r\n      <label className={styles.findContactLabel}>\r\n        Find contacts by name\r\n        <input\r\n          className={styles.findContactInput}\r\n          name=\"filter\"\r\n          type=\"text\"\r\n          value={filter}\r\n          onChange={onHandleInputSearch}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\nFilter.propTypes = {\r\n  onHandleInputSearch: PropTypes.func.isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n};\r\nexport default Filter;\r\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport Container from './Components/Container';\nimport ContactList from './Components/ContactList';\nimport ContactForm from './Components/ContactForm';\nimport Filter from './Components/Filter';\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n  //  в onClick передавать не будем,  стрелочной функцией не делать!\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    // setState  можно вызывать только по условию , чтобы не было зацикливания\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const persedContacts = JSON.parse(contacts);\n    if (persedContacts) {\n      this.setState({ contacts: persedContacts });\n    }\n  }\n  addContact = (name, number) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    this.setState(prevState => ({\n      contacts: [contact, ...prevState.contacts],\n      filter: '',\n    }));\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contactId !== contact.id),\n      filter: '',\n    }));\n  };\n\n  handleInputSearch = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n  getfilterContact = () => {\n    const { contacts, filter } = this.state;\n    const normalizedContact = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedContact),\n    );\n  };\n\n  render() {\n    const { filter, contacts } = this.state;\n\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <ContactForm contacts={contacts} addContact={this.addContact} />\n\n        <Filter filter={filter} onHandleInputSearch={this.handleInputSearch} />\n\n        <ContactList\n          contacts={this.getfilterContact()}\n          onDeleteContact={this.deleteContact}\n        />\n      </Container>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}